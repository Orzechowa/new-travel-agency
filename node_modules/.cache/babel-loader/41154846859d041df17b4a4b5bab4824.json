{"ast":null,"code":"// selectors\nexport const getOrder = _ref => {\n  let {\n    order\n  } = _ref;\n  return order;\n};\nexport const getOrderOptions = _ref2 => {\n  let {\n    order\n  } = _ref2;\n  return order.options;\n}; // action name creator\n\nconst reducerName = 'order';\n\nconst createActionName = name => `app/${reducerName}/${name}`; // action types\n\n\nexport const SET_OPTION = createActionName('SET_OPTION'); // action creators\n\nexport const setOrderOption = payload => ({\n  payload,\n  type: SET_OPTION\n}); // reducer\n\nexport default function reducer() {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case SET_OPTION:\n      return { ...statePart,\n        options: { ...statePart.options,\n          ...action.payload\n        }\n      };\n\n    default:\n      return statePart;\n  }\n}","map":{"version":3,"sources":["/Users/ORZECH/Desktop/EWA/new-travel-agency/src/redux/orderRedux.js"],"names":["getOrder","order","getOrderOptions","options","reducerName","createActionName","name","SET_OPTION","setOrderOption","payload","type","reducer","statePart","action"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAG;AAAA,MAAC;AAACC,IAAAA;AAAD,GAAD;AAAA,SAAaA,KAAb;AAAA,CAAjB;AACP,OAAO,MAAMC,eAAe,GAAG;AAAA,MAAC;AAACD,IAAAA;AAAD,GAAD;AAAA,SAAaA,KAAK,CAACE,OAAnB;AAAA,CAAxB,C,CAEP;;AACA,MAAMC,WAAW,GAAG,OAApB;;AACA,MAAMC,gBAAgB,GAAGC,IAAI,IAAK,OAAMF,WAAY,IAAGE,IAAK,EAA5D,C,CAEA;;;AACA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMG,cAAc,GAAGC,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEH;AAAjB,CAAL,CAA9B,C,CAEP;;AACA,eAAe,SAASI,OAAT,GAA8C;AAAA,MAA7BC,SAA6B,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AAC3D,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKH,UAAL;AACE,aAAO,EACL,GAAGK,SADE;AAELT,QAAAA,OAAO,EAAE,EACP,GAAGS,SAAS,CAACT,OADN;AAEP,aAAGU,MAAM,CAACJ;AAFH;AAFJ,OAAP;;AAOF;AACE,aAAOG,SAAP;AAVJ;AAYD","sourcesContent":["// selectors\nexport const getOrder = ({order}) => order;\nexport const getOrderOptions = ({order}) => order.options;\n\n// action name creator\nconst reducerName = 'order';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n// action types\nexport const SET_OPTION = createActionName('SET_OPTION');\n\n// action creators\nexport const setOrderOption = payload => ({ payload, type: SET_OPTION });\n\n// reducer\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case SET_OPTION:\n      return {\n        ...statePart,\n        options: {\n          ...statePart.options,\n          ...action.payload,\n        },\n      };\n    default:\n      return statePart;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}