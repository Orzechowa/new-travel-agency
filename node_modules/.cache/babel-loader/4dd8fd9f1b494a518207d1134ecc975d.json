{"ast":null,"code":"/* SELECTORS */\nexport const getAllFilters = _ref => {\n  let {\n    filters\n  } = _ref;\n  return filters;\n};\n/* ACTIONS */\n// action name creator\n\nconst reducerName = 'filters';\n\nconst createActionName = name => `app/${reducerName}/${name}`; // action types\n\n\nexport const CHANGE_PHRASE = createActionName('CHANGE_PHRASE');\nexport const ADD_TAGS = createActionName('ADD_TAGS');\nexport const REMOVE_TAGS = createActionName('REMOVE_TAGS');\nexport const CHANGE_DURATION = createActionName('CHANGE_DURATION'); // action creators\n\nexport const changeSearchPhrase = payload => ({\n  payload,\n  type: CHANGE_PHRASE\n});\nexport const addTags = payload => ({\n  payload,\n  type: ADD_TAGS\n});\nexport const removeTags = payload => ({\n  payload,\n  type: REMOVE_TAGS\n});\nexport const changeDuration = (type, value) => ({\n  payload: {\n    [type]: value\n  },\n  type: CHANGE_DURATION\n}); // reducer\n\nexport default function reducer() {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    case CHANGE_PHRASE:\n      return { ...statePart,\n        searchPhrase: action.payload\n      };\n\n    case ADD_TAGS:\n      return { ...statePart,\n        tags: [...statePart.tags, action.payload]\n      };\n\n    case REMOVE_TAGS:\n      return { ...statePart,\n        tags: statePart.tags.filter(tag => tag !== action.payload)\n      };\n\n    case CHANGE_DURATION:\n      return { ...statePart,\n        duration: { ...statePart.duration,\n          ...action.payload\n        }\n      };\n\n    default:\n      return statePart;\n  }\n}","map":{"version":3,"sources":["/Users/ORZECH/Desktop/EWA/new-travel-agency/src/redux/filtersRedux.js"],"names":["getAllFilters","filters","reducerName","createActionName","name","CHANGE_PHRASE","ADD_TAGS","REMOVE_TAGS","CHANGE_DURATION","changeSearchPhrase","payload","type","addTags","removeTags","changeDuration","value","reducer","statePart","action","searchPhrase","tags","filter","tag","duration"],"mappings":"AAAA;AAEA,OAAO,MAAMA,aAAa,GAAG;AAAA,MAAC;AAACC,IAAAA;AAAD,GAAD;AAAA,SAAeA,OAAf;AAAA,CAAtB;AAEP;AAEA;;AACA,MAAMC,WAAW,GAAG,SAApB;;AACA,MAAMC,gBAAgB,GAAGC,IAAI,IAAK,OAAMF,WAAY,IAAGE,IAAK,EAA5D,C,CAEA;;;AACA,OAAO,MAAMC,aAAa,GAAGF,gBAAgB,CAAC,eAAD,CAAtC;AACP,OAAO,MAAMG,QAAQ,GAAGH,gBAAgB,CAAC,UAAD,CAAjC;AACP,OAAO,MAAMI,WAAW,GAAGJ,gBAAgB,CAAC,aAAD,CAApC;AACP,OAAO,MAAMK,eAAe,GAAGL,gBAAgB,CAAC,iBAAD,CAAxC,C,CAEP;;AACA,OAAO,MAAMM,kBAAkB,GAAGC,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEN;AAAjB,CAAL,CAAlC;AACP,OAAO,MAAMO,OAAO,GAAGF,OAAO,KAAK;AAACA,EAAAA,OAAD;AAAUC,EAAAA,IAAI,EAAEL;AAAhB,CAAL,CAAvB;AACP,OAAO,MAAMO,UAAU,GAAGH,OAAO,KAAK;AAACA,EAAAA,OAAD;AAAUC,EAAAA,IAAI,EAAEJ;AAAhB,CAAL,CAA1B;AACP,OAAO,MAAMO,cAAc,GAAG,CAACH,IAAD,EAAOI,KAAP,MAAkB;AAC9CL,EAAAA,OAAO,EAAC;AAAC,KAACC,IAAD,GAAQI;AAAT,GADsC;AAE9CJ,EAAAA,IAAI,EAAEH;AAFwC,CAAlB,CAAvB,C,CAIP;;AACA,eAAe,SAASQ,OAAT,GAA8C;AAAA,MAA7BC,SAA6B,uEAAjB,EAAiB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AAC3D,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKN,aAAL;AACE,aAAO,EACL,GAAGY,SADE;AAELE,QAAAA,YAAY,EAAED,MAAM,CAACR;AAFhB,OAAP;;AAIF,SAAKJ,QAAL;AACE,aAAO,EACL,GAAGW,SADE;AAELG,QAAAA,IAAI,EAAE,CAAC,GAAGH,SAAS,CAACG,IAAd,EAAoBF,MAAM,CAACR,OAA3B;AAFD,OAAP;;AAIF,SAAKH,WAAL;AACE,aAAO,EACL,GAAGU,SADE;AAELG,QAAAA,IAAI,EAAEH,SAAS,CAACG,IAAV,CAAeC,MAAf,CAAsBC,GAAG,IAAIA,GAAG,KAAKJ,MAAM,CAACR,OAA5C;AAFD,OAAP;;AAIF,SAAKF,eAAL;AACE,aAAO,EACL,GAAGS,SADE;AAELM,QAAAA,QAAQ,EAAE,EACR,GAAGN,SAAS,CAACM,QADL;AAER,aAAGL,MAAM,CAACR;AAFF;AAFL,OAAP;;AAOF;AACE,aAAOO,SAAP;AAzBJ;AA2BD","sourcesContent":["/* SELECTORS */\n\nexport const getAllFilters = ({filters}) => filters;\n\n/* ACTIONS */\n\n// action name creator\nconst reducerName = 'filters';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n// action types\nexport const CHANGE_PHRASE = createActionName('CHANGE_PHRASE');\nexport const ADD_TAGS = createActionName('ADD_TAGS');\nexport const REMOVE_TAGS = createActionName('REMOVE_TAGS');\nexport const CHANGE_DURATION = createActionName('CHANGE_DURATION');\n\n// action creators\nexport const changeSearchPhrase = payload => ({ payload, type: CHANGE_PHRASE });\nexport const addTags = payload => ({payload, type: ADD_TAGS});\nexport const removeTags = payload => ({payload, type: REMOVE_TAGS});\nexport const changeDuration = (type, value) => ({\n  payload:{[type]: value},\n  type: CHANGE_DURATION});\n\n// reducer\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case CHANGE_PHRASE:\n      return {\n        ...statePart,\n        searchPhrase: action.payload,\n      };\n    case ADD_TAGS:\n      return {\n        ...statePart,\n        tags: [...statePart.tags, action.payload],\n      }\n    case REMOVE_TAGS:\n      return {\n        ...statePart,\n        tags: statePart.tags.filter(tag => tag !== action.payload),\n      }\n    case CHANGE_DURATION:\n      return {\n        ...statePart,\n        duration: {\n          ...statePart.duration,\n          ...action.payload,\n        },\n      };\n    default:\n      return statePart;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}