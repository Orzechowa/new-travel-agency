{"ast":null,"code":"var _jsxFileName = \"/Users/ORZECH/Desktop/EWA/new-travel-agency/src/components/features/OrderOption/OrderOptionCheckboxes.js\";\nimport styles from './OrderOption.module.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../../../utils/formatPrice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst newValueSet = (currentValue, id, checked) => {\n  if (checked) {\n    return [...currentValue, id];\n  } else {\n    return currentValue.filter(value => value != id);\n  }\n};\n\nconst OrderOptionCheckboxes = _ref => {\n  let {\n    values,\n    currentValue,\n    setOptionValue\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.checkboxes,\n    children: values.map(value => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: value.id,\n        checked: currentValue.includes(value.id),\n        onChange: event => setOptionValue(newValueSet(currentValue, value.id, event.currentTarget.checked))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), value.name, formatPrice(value.price)]\n    }, value.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n\n_c = OrderOptionCheckboxes;\nOrderOptionCheckboxes.propTypes = {\n  values: PropTypes.array,\n  currentValue: PropTypes.string,\n  setOptionValue: PropTypes.func\n};\nexport default OrderOptionCheckboxes;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderOptionCheckboxes\");","map":{"version":3,"sources":["/Users/ORZECH/Desktop/EWA/new-travel-agency/src/components/features/OrderOption/OrderOptionCheckboxes.js"],"names":["styles","React","PropTypes","formatPrice","newValueSet","currentValue","id","checked","filter","value","OrderOptionCheckboxes","values","setOptionValue","checkboxes","map","includes","event","currentTarget","name","price","propTypes","array","string","func"],"mappings":";AACA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;;;AAGA,MAAMC,WAAW,GAAG,CAACC,YAAD,EAAeC,EAAf,EAAmBC,OAAnB,KAA+B;AAC/C,MAAGA,OAAH,EAAW;AACT,WAAO,CACL,GAAGF,YADE,EAELC,EAFK,CAAP;AAID,GALD,MAKO;AACL,WAAOD,YAAY,CAACG,MAAb,CAAoBC,KAAK,IAAIA,KAAK,IAAIH,EAAtC,CAAP;AACD;AACJ,CATD;;AAWA,MAAMI,qBAAqB,GAAG;AAAA,MAAC;AAACC,IAAAA,MAAD;AAASN,IAAAA,YAAT;AAAuBO,IAAAA;AAAvB,GAAD;AAAA,sBAC5B;AAAK,IAAA,SAAS,EAAGZ,MAAM,CAACa,UAAxB;AAAA,cACGF,MAAM,CAACG,GAAP,CAAWL,KAAK,iBACf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAEA,KAAK,CAACH,EAFf;AAGE,QAAA,OAAO,EAAED,YAAY,CAACU,QAAb,CAAsBN,KAAK,CAACH,EAA5B,CAHX;AAIE,QAAA,QAAQ,EAAEU,KAAK,IAAIJ,cAAc,CAACR,WAAW,CAACC,YAAD,EAAeI,KAAK,CAACH,EAArB,EAAyBU,KAAK,CAACC,aAAN,CAAoBV,OAA7C,CAAZ;AAJnC;AAAA;AAAA;AAAA;AAAA,cADF,EAMKE,KAAK,CAACS,IANX,EAMiBf,WAAW,CAACM,KAAK,CAACU,KAAP,CAN5B;AAAA,OAAYV,KAAK,CAACH,EAAlB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,CAA9B;;KAAMI,qB;AAeJA,qBAAqB,CAACU,SAAtB,GAAkC;AAC9BT,EAAAA,MAAM,EAAET,SAAS,CAACmB,KADY;AAE9BhB,EAAAA,YAAY,EAAEH,SAAS,CAACoB,MAFM;AAG9BV,EAAAA,cAAc,EAAEV,SAAS,CAACqB;AAHI,CAAlC;AAMF,eAAeb,qBAAf","sourcesContent":["\nimport styles from './OrderOption.module.scss';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {formatPrice} from '../../../utils/formatPrice';\n\n\nconst newValueSet = (currentValue, id, checked) => {\n    if(checked){\n      return [\n        ...currentValue,\n        id,\n      ];\n    } else {\n      return currentValue.filter(value => value != id);\n    }\n};\n\nconst OrderOptionCheckboxes = ({values, currentValue, setOptionValue}) => (\n  <div className ={styles.checkboxes}>\n    {values.map(value => (\n      <label key={value.id}>\n        <input\n          type='checkbox'\n          value={value.id}\n          checked={currentValue.includes(value.id)}\n          onChange={event => setOptionValue(newValueSet(currentValue, value.id, event.currentTarget.checked))}/>\n          {value.name}{formatPrice(value.price)}\n      </label> \n      ))}\n  </div>\n  );\n\n  OrderOptionCheckboxes.propTypes = {\n      values: PropTypes.array,\n      currentValue: PropTypes.string,\n      setOptionValue: PropTypes.func,\n  }\n\nexport default OrderOptionCheckboxes;"]},"metadata":{},"sourceType":"module"}